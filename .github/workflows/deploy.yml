# .github/workflows/deploy.yml
name: Deploy Docker Compose to GitHub

on:
  push:
    branches:
      - deployment    # Se activará cuando hagas push a esta rama
    paths:
      - 'proyecto/caso5/demo/**'    # Solo cuando hay cambios en esta carpeta

env:
  REGISTRY: ghcr.io
  DB_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/demo-db
  BACKEND_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/demo-backend

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Database image
        uses: docker/build-push-action@v5
        with:
          context: ./proyecto/caso5/demo/database
          push: true
          tags: ${{ env.DB_IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.DB_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.DB_IMAGE_NAME }}:buildcache,mode=max

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./proyecto/caso5/demo/backend
          file: ./proyecto/caso5/demo/backend/Dockerfile.dev
          push: true
          tags: ${{ env.BACKEND_IMAGE_NAME }}:latest
          cache-from: type=registry,ref=${{ env.BACKEND_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.BACKEND_IMAGE_NAME }}:buildcache,mode=max

      - name: Update docker-compose.yml
        run: |
          cd proyecto/caso5/demo
          # Modificar el docker-compose.yml para usar las imágenes de GHCR
          sed -i "s|build:|image: ${{ env.DB_IMAGE_NAME }}:latest|g" docker-compose.yml
          sed -i "s|dockerfile: Dockerfile.dev|image: ${{ env.BACKEND_IMAGE_NAME }}:latest|g" docker-compose.yml

      - name: Create deployment artifact
        run: |
          mkdir -p deployment
          cp proyecto/caso5/demo/docker-compose.yml deployment/
          echo "DB_PASSWORD=eG4clXnlGm" > deployment/.env
          echo "VERSION=$(date +%s)" >> deployment/.env

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: deployment-files
          path: deployment/

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com/${{ github.repository }}/packages

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: deployment-files
          path: .

      - name: Deploy with Docker Compose
        run: |
          docker-compose pull
          docker-compose up -d

      - name: Verify deployment
        run: |
          docker-compose ps
          echo "Deployment completed successfully!"